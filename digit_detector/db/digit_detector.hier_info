|digit_detector
CLOCK_50 => digit_detector_datapath:G0.clock
CLOCK_50 => digit_detector_control_unit:G1.clock
KEY[0] => digit_detector_control_unit:G1.reset
KEY[1] => digit_detector_control_unit:G1.take_photo
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
CMOS_MCLK <= digit_detector_datapath:G0.camera_master_clk
CMOS_SDAT <= digit_detector_datapath:G0.camera_serial_data
CMOS_SCLK <= digit_detector_datapath:G0.camera_serial_clk
CMOS_FVAL => digit_detector_datapath:G0.camera_frame_valid
CMOS_LVAL => digit_detector_datapath:G0.camera_line_valid
CMOS_PIXCLK => digit_detector_datapath:G0.camera_pixclk
CMOS_DATA[0] => digit_detector_datapath:G0.camera_data_out[0]
CMOS_DATA[1] => digit_detector_datapath:G0.camera_data_out[1]
CMOS_DATA[2] => digit_detector_datapath:G0.camera_data_out[2]
CMOS_DATA[3] => digit_detector_datapath:G0.camera_data_out[3]
CMOS_DATA[4] => digit_detector_datapath:G0.camera_data_out[4]
CMOS_DATA[5] => digit_detector_datapath:G0.camera_data_out[5]
CMOS_DATA[6] => digit_detector_datapath:G0.camera_data_out[6]
CMOS_DATA[7] => digit_detector_datapath:G0.camera_data_out[7]
CMOS_DATA[8] => digit_detector_datapath:G0.camera_data_out[8]
CMOS_DATA[9] => digit_detector_datapath:G0.camera_data_out[9]
VGA_HS <= digit_detector_datapath:G0.Hsync
VGA_VS <= digit_detector_datapath:G0.Vsync
VGA_R[0] <= digit_detector_datapath:G0.red[0]
VGA_R[1] <= digit_detector_datapath:G0.red[1]
VGA_R[2] <= digit_detector_datapath:G0.red[2]
VGA_R[3] <= digit_detector_datapath:G0.red[3]
VGA_R[4] <= digit_detector_datapath:G0.red[4]
VGA_R[5] <= digit_detector_datapath:G0.red[5]
VGA_R[6] <= digit_detector_datapath:G0.red[6]
VGA_R[7] <= digit_detector_datapath:G0.red[7]
VGA_G[0] <= digit_detector_datapath:G0.green[0]
VGA_G[1] <= digit_detector_datapath:G0.green[1]
VGA_G[2] <= digit_detector_datapath:G0.green[2]
VGA_G[3] <= digit_detector_datapath:G0.green[3]
VGA_G[4] <= digit_detector_datapath:G0.green[4]
VGA_G[5] <= digit_detector_datapath:G0.green[5]
VGA_G[6] <= digit_detector_datapath:G0.green[6]
VGA_G[7] <= digit_detector_datapath:G0.green[7]
VGA_B[0] <= digit_detector_datapath:G0.blue[0]
VGA_B[1] <= digit_detector_datapath:G0.blue[1]
VGA_B[2] <= digit_detector_datapath:G0.blue[2]
VGA_B[3] <= digit_detector_datapath:G0.blue[3]
VGA_B[4] <= digit_detector_datapath:G0.blue[4]
VGA_B[5] <= digit_detector_datapath:G0.blue[5]
VGA_B[6] <= digit_detector_datapath:G0.blue[6]
VGA_B[7] <= digit_detector_datapath:G0.blue[7]
VGA_BLANK_N <= digit_detector_datapath:G0.nblanck
VGA_SYNC_N <= digit_detector_datapath:G0.nsync
VGA_CLK <= digit_detector_datapath:G0.pxclk
LEDG[0] <= digit_detector_control_unit:G1.state_out[0]
LEDG[1] <= digit_detector_control_unit:G1.state_out[1]
LEDG[2] <= digit_detector_control_unit:G1.state_out[2]
LEDG[3] <= <GND>
LEDG[4] <= <GND>
LEDG[5] <= <GND>
LEDG[6] <= <GND>
LEDG[7] <= <GND>
LEDR[0] <= digit_detector_control_unit:G1.state_photo
LEDR[1] <= digit_detector_control_unit:G1.state_rgb
LEDR[2] <= digit_detector_control_unit:G1.state_grayscale
LEDR[3] <= digit_detector_control_unit:G1.state_detection
LEDR[4] <= digit_detector_datapath:G0.stop_photo
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
LEDR[10] <= <GND>
LEDR[11] <= <GND>
LEDR[12] <= <GND>
LEDR[13] <= <GND>
LEDR[14] <= <GND>
LEDR[15] <= <GND>
LEDR[16] <= <GND>
LEDR[17] <= <GND>


|digit_detector|digit_detector_datapath:G0
clock => camera_interface:G1.clk
clock => counter_grayscale[0].CLK
clock => counter_grayscale[1].CLK
clock => counter_grayscale[2].CLK
clock => counter_grayscale[3].CLK
clock => counter_grayscale[4].CLK
clock => counter_grayscale[5].CLK
clock => counter_grayscale[6].CLK
clock => counter_grayscale[7].CLK
clock => counter_grayscale[8].CLK
clock => grayscale_done~reg0.CLK
clock => counter_rgb[0].CLK
clock => counter_rgb[1].CLK
clock => counter_rgb[2].CLK
clock => counter_rgb[3].CLK
clock => counter_rgb[4].CLK
clock => counter_rgb[5].CLK
clock => counter_rgb[6].CLK
clock => counter_rgb[7].CLK
clock => counter_rgb[8].CLK
clock => rgb_done~reg0.CLK
clock => vga_controller:G3.clk
state_in[0] => ~NO_FANOUT~
state_in[1] => ~NO_FANOUT~
state_in[2] => ~NO_FANOUT~
state_photo => camera_interface:G1.state_photo
state_rgb => rgb_done.OUTPUTSELECT
state_rgb => counter_rgb.OUTPUTSELECT
state_rgb => counter_rgb.OUTPUTSELECT
state_rgb => counter_rgb.OUTPUTSELECT
state_rgb => counter_rgb.OUTPUTSELECT
state_rgb => counter_rgb.OUTPUTSELECT
state_rgb => counter_rgb.OUTPUTSELECT
state_rgb => counter_rgb.OUTPUTSELECT
state_rgb => counter_rgb.OUTPUTSELECT
state_rgb => counter_rgb.OUTPUTSELECT
state_grayscale => grayscale_done.OUTPUTSELECT
state_grayscale => counter_grayscale.OUTPUTSELECT
state_grayscale => counter_grayscale.OUTPUTSELECT
state_grayscale => counter_grayscale.OUTPUTSELECT
state_grayscale => counter_grayscale.OUTPUTSELECT
state_grayscale => counter_grayscale.OUTPUTSELECT
state_grayscale => counter_grayscale.OUTPUTSELECT
state_grayscale => counter_grayscale.OUTPUTSELECT
state_grayscale => counter_grayscale.OUTPUTSELECT
state_grayscale => counter_grayscale.OUTPUTSELECT
state_detection => ~NO_FANOUT~
stop_photo <= ram_image:G2.stop_photo
rgb_done <= rgb_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
grayscale_done <= grayscale_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
detection_done <= comb.DB_MAX_OUTPUT_PORT_TYPE
camera_serial_clk <= camera_interface:G1.camera_serial_clk
camera_master_clk <= camera_interface:G1.camera_master_clk
camera_serial_data <= camera_interface:G1.camera_serial_data
camera_line_valid => camera_interface:G1.camera_line_valid
camera_frame_valid => camera_interface:G1.camera_frame_valid
camera_pixclk => camera_interface:G1.camera_pixclk
camera_data_out[0] => camera_interface:G1.camera_data_out[0]
camera_data_out[1] => camera_interface:G1.camera_data_out[1]
camera_data_out[2] => camera_interface:G1.camera_data_out[2]
camera_data_out[3] => camera_interface:G1.camera_data_out[3]
camera_data_out[4] => camera_interface:G1.camera_data_out[4]
camera_data_out[5] => camera_interface:G1.camera_data_out[5]
camera_data_out[6] => camera_interface:G1.camera_data_out[6]
camera_data_out[7] => camera_interface:G1.camera_data_out[7]
camera_data_out[8] => camera_interface:G1.camera_data_out[8]
camera_data_out[9] => camera_interface:G1.camera_data_out[9]
Hsync <= vga_controller:G3.Hsync
Vsync <= vga_controller:G3.Vsync
red[0] <= vga_controller:G3.vga_red[0]
red[1] <= vga_controller:G3.vga_red[1]
red[2] <= vga_controller:G3.vga_red[2]
red[3] <= vga_controller:G3.vga_red[3]
red[4] <= vga_controller:G3.vga_red[4]
red[5] <= vga_controller:G3.vga_red[5]
red[6] <= vga_controller:G3.vga_red[6]
red[7] <= vga_controller:G3.vga_red[7]
green[0] <= vga_controller:G3.vga_green[0]
green[1] <= vga_controller:G3.vga_green[1]
green[2] <= vga_controller:G3.vga_green[2]
green[3] <= vga_controller:G3.vga_green[3]
green[4] <= vga_controller:G3.vga_green[4]
green[5] <= vga_controller:G3.vga_green[5]
green[6] <= vga_controller:G3.vga_green[6]
green[7] <= vga_controller:G3.vga_green[7]
blue[0] <= vga_controller:G3.vga_blue[0]
blue[1] <= vga_controller:G3.vga_blue[1]
blue[2] <= vga_controller:G3.vga_blue[2]
blue[3] <= vga_controller:G3.vga_blue[3]
blue[4] <= vga_controller:G3.vga_blue[4]
blue[5] <= vga_controller:G3.vga_blue[5]
blue[6] <= vga_controller:G3.vga_blue[6]
blue[7] <= vga_controller:G3.vga_blue[7]
nblanck <= vga_controller:G3.nblanck
nsync <= vga_controller:G3.nsync
pxclk <= vga_controller:G3.pxclk


|digit_detector|digit_detector_datapath:G0|camera_interface:G1
clk => clk_25MHz:G0.inclk0
state_photo => write_enable.DATAB
mem_addr_write[0] <= mem_addr_write[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_write[1] <= mem_addr_write[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_write[2] <= mem_addr_write[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_write[3] <= mem_addr_write[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_write[4] <= mem_addr_write[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_write[5] <= mem_addr_write[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_write[6] <= mem_addr_write[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_write[7] <= mem_addr_write[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[0] <= data_write[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[1] <= data_write[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[2] <= data_write[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[3] <= data_write[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[4] <= data_write[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[5] <= data_write[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[6] <= data_write[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[7] <= data_write[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable <= write_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE
camera_serial_clk <= <VCC>
camera_master_clk <= clk_25MHz:G0.c0
camera_serial_data <= <VCC>
camera_line_valid => write_enable.OUTPUTSELECT
camera_line_valid => data_write.OUTPUTSELECT
camera_line_valid => data_write.OUTPUTSELECT
camera_line_valid => data_write.OUTPUTSELECT
camera_line_valid => data_write.OUTPUTSELECT
camera_line_valid => data_write.OUTPUTSELECT
camera_line_valid => data_write.OUTPUTSELECT
camera_line_valid => data_write.OUTPUTSELECT
camera_line_valid => data_write.OUTPUTSELECT
camera_line_valid => aux[4].ENA
camera_line_valid => aux[3].ENA
camera_line_valid => aux[2].ENA
camera_line_valid => aux[1].ENA
camera_line_valid => aux[0].ENA
camera_line_valid => mem_addr_write[7]~reg0.ENA
camera_line_valid => mem_addr_write[6]~reg0.ENA
camera_line_valid => mem_addr_write[5]~reg0.ENA
camera_line_valid => mem_addr_write[4]~reg0.ENA
camera_line_valid => mem_addr_write[3]~reg0.ENA
camera_line_valid => mem_addr_write[2]~reg0.ENA
camera_line_valid => mem_addr_write[1]~reg0.ENA
camera_line_valid => mem_addr_write[0]~reg0.ENA
camera_line_valid => aux[5].ENA
camera_line_valid => aux[6].ENA
camera_line_valid => aux[7].ENA
camera_line_valid => dv[0].ENA
camera_line_valid => dv[1].ENA
camera_line_valid => dv[2].ENA
camera_line_valid => dv[3].ENA
camera_line_valid => dh[0].ENA
camera_line_valid => dh[1].ENA
camera_line_valid => dh[2].ENA
camera_line_valid => dh[3].ENA
camera_line_valid => dh[4].ENA
camera_line_valid => dh[5].ENA
camera_line_valid => dh[6].ENA
camera_line_valid => dh[7].ENA
camera_line_valid => Vcount[0].ENA
camera_line_valid => Vcount[1].ENA
camera_line_valid => Vcount[2].ENA
camera_line_valid => Vcount[3].ENA
camera_line_valid => Vcount[4].ENA
camera_line_valid => Vcount[5].ENA
camera_line_valid => Vcount[6].ENA
camera_line_valid => Vcount[7].ENA
camera_line_valid => Vcount[8].ENA
camera_line_valid => Vcount[9].ENA
camera_line_valid => Vcount[10].ENA
camera_line_valid => Hcount[0].ENA
camera_line_valid => Hcount[1].ENA
camera_line_valid => Hcount[2].ENA
camera_line_valid => Hcount[3].ENA
camera_line_valid => Hcount[4].ENA
camera_line_valid => Hcount[5].ENA
camera_line_valid => Hcount[6].ENA
camera_line_valid => Hcount[7].ENA
camera_line_valid => Hcount[8].ENA
camera_line_valid => Hcount[9].ENA
camera_line_valid => Hcount[10].ENA
camera_frame_valid => ~NO_FANOUT~
camera_pixclk => data_write[0]~reg0.CLK
camera_pixclk => data_write[1]~reg0.CLK
camera_pixclk => data_write[2]~reg0.CLK
camera_pixclk => data_write[3]~reg0.CLK
camera_pixclk => data_write[4]~reg0.CLK
camera_pixclk => data_write[5]~reg0.CLK
camera_pixclk => data_write[6]~reg0.CLK
camera_pixclk => data_write[7]~reg0.CLK
camera_pixclk => mem_addr_write[0]~reg0.CLK
camera_pixclk => mem_addr_write[1]~reg0.CLK
camera_pixclk => mem_addr_write[2]~reg0.CLK
camera_pixclk => mem_addr_write[3]~reg0.CLK
camera_pixclk => mem_addr_write[4]~reg0.CLK
camera_pixclk => mem_addr_write[5]~reg0.CLK
camera_pixclk => mem_addr_write[6]~reg0.CLK
camera_pixclk => mem_addr_write[7]~reg0.CLK
camera_pixclk => aux[0].CLK
camera_pixclk => aux[1].CLK
camera_pixclk => aux[2].CLK
camera_pixclk => aux[3].CLK
camera_pixclk => aux[4].CLK
camera_pixclk => aux[5].CLK
camera_pixclk => aux[6].CLK
camera_pixclk => aux[7].CLK
camera_pixclk => dv[0].CLK
camera_pixclk => dv[1].CLK
camera_pixclk => dv[2].CLK
camera_pixclk => dv[3].CLK
camera_pixclk => dh[0].CLK
camera_pixclk => dh[1].CLK
camera_pixclk => dh[2].CLK
camera_pixclk => dh[3].CLK
camera_pixclk => dh[4].CLK
camera_pixclk => dh[5].CLK
camera_pixclk => dh[6].CLK
camera_pixclk => dh[7].CLK
camera_pixclk => Vcount[0].CLK
camera_pixclk => Vcount[1].CLK
camera_pixclk => Vcount[2].CLK
camera_pixclk => Vcount[3].CLK
camera_pixclk => Vcount[4].CLK
camera_pixclk => Vcount[5].CLK
camera_pixclk => Vcount[6].CLK
camera_pixclk => Vcount[7].CLK
camera_pixclk => Vcount[8].CLK
camera_pixclk => Vcount[9].CLK
camera_pixclk => Vcount[10].CLK
camera_pixclk => Hcount[0].CLK
camera_pixclk => Hcount[1].CLK
camera_pixclk => Hcount[2].CLK
camera_pixclk => Hcount[3].CLK
camera_pixclk => Hcount[4].CLK
camera_pixclk => Hcount[5].CLK
camera_pixclk => Hcount[6].CLK
camera_pixclk => Hcount[7].CLK
camera_pixclk => Hcount[8].CLK
camera_pixclk => Hcount[9].CLK
camera_pixclk => Hcount[10].CLK
camera_pixclk => write_enable~reg0.CLK
camera_data_out[0] => ~NO_FANOUT~
camera_data_out[1] => ~NO_FANOUT~
camera_data_out[2] => data_write.DATAB
camera_data_out[3] => data_write.DATAB
camera_data_out[4] => data_write.DATAB
camera_data_out[5] => data_write.DATAB
camera_data_out[6] => data_write.DATAB
camera_data_out[7] => data_write.DATAB
camera_data_out[8] => data_write.DATAB
camera_data_out[9] => data_write.DATAB


|digit_detector|digit_detector_datapath:G0|camera_interface:G1|clk_25MHz:G0
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|digit_detector|digit_detector_datapath:G0|camera_interface:G1|clk_25MHz:G0|altpll:altpll_component
inclk[0] => clk_25MHz_altpll:auto_generated.inclk[0]
inclk[1] => clk_25MHz_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => clk_25MHz_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= clk_25MHz_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|digit_detector|digit_detector_datapath:G0|camera_interface:G1|clk_25MHz:G0|altpll:altpll_component|clk_25MHz_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|digit_detector|digit_detector_datapath:G0|ram_image:G2
clock => bayer_image~16.CLK
clock => bayer_image~0.CLK
clock => bayer_image~1.CLK
clock => bayer_image~2.CLK
clock => bayer_image~3.CLK
clock => bayer_image~4.CLK
clock => bayer_image~5.CLK
clock => bayer_image~6.CLK
clock => bayer_image~7.CLK
clock => bayer_image~8.CLK
clock => bayer_image~9.CLK
clock => bayer_image~10.CLK
clock => bayer_image~11.CLK
clock => bayer_image~12.CLK
clock => bayer_image~13.CLK
clock => bayer_image~14.CLK
clock => bayer_image~15.CLK
clock => grayscale_image~0.CLK
clock => grayscale_image~1.CLK
clock => grayscale_image~2.CLK
clock => grayscale_image~3.CLK
clock => grayscale_image~4.CLK
clock => grayscale_image~5.CLK
clock => grayscale_image~6.CLK
clock => grayscale_image~7.CLK
clock => grayscale_image~8.CLK
clock => grayscale_image~9.CLK
clock => grayscale_image~10.CLK
clock => grayscale_image~11.CLK
clock => grayscale_image~12.CLK
clock => grayscale_image~13.CLK
clock => grayscale_image~14.CLK
clock => grayscale_image~15.CLK
clock => grayscale_image~16.CLK
clock => dout_grayscale[0]~reg0.CLK
clock => dout_grayscale[1]~reg0.CLK
clock => dout_grayscale[2]~reg0.CLK
clock => dout_grayscale[3]~reg0.CLK
clock => dout_grayscale[4]~reg0.CLK
clock => dout_grayscale[5]~reg0.CLK
clock => dout_grayscale[6]~reg0.CLK
clock => dout_grayscale[7]~reg0.CLK
clock => stop_photo~reg0.CLK
clock => i[0].CLK
clock => i[1].CLK
clock => i[2].CLK
clock => i[3].CLK
clock => i[4].CLK
clock => i[5].CLK
clock => i[6].CLK
clock => i[7].CLK
clock => addr_grayscale_int[0].CLK
clock => addr_grayscale_int[1].CLK
clock => addr_grayscale_int[2].CLK
clock => addr_grayscale_int[3].CLK
clock => addr_grayscale_int[4].CLK
clock => addr_grayscale_int[5].CLK
clock => addr_grayscale_int[6].CLK
clock => addr_grayscale_int[7].CLK
clock => addr_bayer_int[0].CLK
clock => addr_bayer_int[1].CLK
clock => addr_bayer_int[2].CLK
clock => addr_bayer_int[3].CLK
clock => addr_bayer_int[4].CLK
clock => addr_bayer_int[5].CLK
clock => addr_bayer_int[6].CLK
clock => addr_bayer_int[7].CLK
clock => bayer_image.CLK0
clock => grayscale_image.CLK0
wr_bayer => bayer_image~16.DATAIN
wr_bayer => bayer_image.WE
addr_bayer[0] => addr_bayer_int[0].DATAIN
addr_bayer[1] => addr_bayer_int[1].DATAIN
addr_bayer[2] => addr_bayer_int[2].DATAIN
addr_bayer[3] => addr_bayer_int[3].DATAIN
addr_bayer[4] => addr_bayer_int[4].DATAIN
addr_bayer[5] => addr_bayer_int[5].DATAIN
addr_bayer[6] => addr_bayer_int[6].DATAIN
addr_bayer[7] => addr_bayer_int[7].DATAIN
din_bayer[0] => bayer_image~15.DATAIN
din_bayer[0] => bayer_image.DATAIN
din_bayer[1] => bayer_image~14.DATAIN
din_bayer[1] => bayer_image.DATAIN1
din_bayer[2] => bayer_image~13.DATAIN
din_bayer[2] => bayer_image.DATAIN2
din_bayer[3] => bayer_image~12.DATAIN
din_bayer[3] => bayer_image.DATAIN3
din_bayer[4] => bayer_image~11.DATAIN
din_bayer[4] => bayer_image.DATAIN4
din_bayer[5] => bayer_image~10.DATAIN
din_bayer[5] => bayer_image.DATAIN5
din_bayer[6] => bayer_image~9.DATAIN
din_bayer[6] => bayer_image.DATAIN6
din_bayer[7] => bayer_image~8.DATAIN
din_bayer[7] => bayer_image.DATAIN7
stop_photo <= stop_photo~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_grayscale[0] => addr_grayscale_int[0].DATAIN
addr_grayscale[1] => addr_grayscale_int[1].DATAIN
addr_grayscale[2] => addr_grayscale_int[2].DATAIN
addr_grayscale[3] => addr_grayscale_int[3].DATAIN
addr_grayscale[4] => addr_grayscale_int[4].DATAIN
addr_grayscale[5] => addr_grayscale_int[5].DATAIN
addr_grayscale[6] => addr_grayscale_int[6].DATAIN
addr_grayscale[7] => addr_grayscale_int[7].DATAIN
dout_grayscale[0] <= dout_grayscale[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout_grayscale[1] <= dout_grayscale[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout_grayscale[2] <= dout_grayscale[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout_grayscale[3] <= dout_grayscale[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout_grayscale[4] <= dout_grayscale[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout_grayscale[5] <= dout_grayscale[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout_grayscale[6] <= dout_grayscale[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout_grayscale[7] <= dout_grayscale[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|digit_detector|digit_detector_datapath:G0|vga_controller:G3
clk => pixel_clk.CLK
mem_out[0] => vga_red.DATAB
mem_out[1] => vga_red.DATAB
mem_out[2] => vga_red.DATAB
mem_out[3] => vga_red.DATAB
mem_out[4] => vga_red.DATAB
mem_out[5] => vga_red.DATAB
mem_out[6] => vga_red.DATAB
mem_out[7] => vga_red.DATAB
Hsync <= Hsync~reg0.DB_MAX_OUTPUT_PORT_TYPE
Vsync <= Vsync~reg0.DB_MAX_OUTPUT_PORT_TYPE
vga_red[0] <= vga_red[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_red[1] <= vga_red[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_red[2] <= vga_red[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_red[3] <= vga_red[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_red[4] <= vga_red[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_red[5] <= vga_red[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_red[6] <= vga_red[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_red[7] <= vga_red[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_green[0] <= vga_green[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_green[1] <= vga_green[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_green[2] <= vga_green[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_green[3] <= vga_green[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_green[4] <= vga_green[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_green[5] <= vga_green[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_green[6] <= vga_green[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_green[7] <= vga_green[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_blue[0] <= vga_blue[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_blue[1] <= vga_blue[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_blue[2] <= vga_blue[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_blue[3] <= vga_blue[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_blue[4] <= vga_blue[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_blue[5] <= vga_blue[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_blue[6] <= vga_blue[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
vga_blue[7] <= vga_blue[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
mem_addr[0] <= mem_addr[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
mem_addr[1] <= mem_addr[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
mem_addr[2] <= mem_addr[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
mem_addr[3] <= mem_addr[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
mem_addr[4] <= mem_addr[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
mem_addr[5] <= mem_addr[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
mem_addr[6] <= mem_addr[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
mem_addr[7] <= mem_addr[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
nblanck <= <VCC>
nsync <= <GND>
pxclk <= pixel_clk.DB_MAX_OUTPUT_PORT_TYPE


|digit_detector|digit_detector_control_unit:G1
clock => present_state~1.DATAIN
reset => present_state~3.DATAIN
take_photo => Selector0.IN3
take_photo => next_state.START.DATAB
stop_photo => Selector1.IN3
stop_photo => Selector0.IN1
rgb_done => Selector2.IN3
rgb_done => Selector1.IN1
grayscale_done => Selector3.IN3
grayscale_done => Selector2.IN1
detection_done => Selector4.IN3
detection_done => Selector3.IN1
state_photo <= state_photo.DB_MAX_OUTPUT_PORT_TYPE
state_rgb <= state_rgb.DB_MAX_OUTPUT_PORT_TYPE
state_grayscale <= state_grayscale.DB_MAX_OUTPUT_PORT_TYPE
state_detection <= state_detection.DB_MAX_OUTPUT_PORT_TYPE
state_out[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
state_out[1] <= state_out.DB_MAX_OUTPUT_PORT_TYPE
state_out[2] <= state_out.DB_MAX_OUTPUT_PORT_TYPE


